"AJ_DEMODATABASE"."PUBLIC"."CONSUMER_COMPLAINTS_AWS""AJ_DEMODATABASE"."PUBLIC"."CONSUMER_COMPLAINTS_AWS"USE "AJ_DEMODATABASE"


DROP TABLE "MKS_CONSUMER_COMPLAINTS";

CREATE or replace table MKS_CONSUMER_COMPLAINTS
     (	
      DATE_RECEIVED STRING,
      PRODUCT_NAME VARCHAR2(80), 
	  SUB_PRODUCT VARCHAR2(100), 
	  ISSUE VARCHAR2(100), 
      SUB_ISSUE VARCHAR2(100),
      CONSUMER_COMPLAINT_NARRATIVE string,
      Company_Public_Response STRING,
      Company VARCHAR(100),
      State_Name CHAR(90),
      Zip_Code string,
      Tags VARCHAR(80),
      Consumer_Consent_Provided CHAR(85),
      Submitted_via STRING,
      Date_Sent_to_Company STRING,
      Company_Response_to_Consumer VARCHAR(80),
      Timely_Response CHAR(4),
      CONSUMER_DISPUTED CHAR(4),
      COMPLAINT_ID NUMBER(12,0) NOT NULL PRIMARY KEY
);

SELECT * FROM MKS_CONSUMER_COMPLAINTS

SELECT COUNT(DISTINCT STATE_NAME) FROM MKS_CONSUMER_COMPLAINTS;
SELECT DISTINCT(PRODUCT_NAME) FROM MKS_CONSUMER_COMPLAINTS;

SELECT *,
    CASE
        WHEN PRODUCT_NAME IN ('Consumer Loan''Student loan''Payday loan') THEN 'CSP_LOAN'
        ELSE 'OTHER_FINAN_SERV'
        END AS LOAN_TYPE
        FROM MKS_CONSUMER_COMPLAINTS;
        
SELECT DISTINCT SUBSTRING(DATE_RECEIVED,7,12) FROM MKS_CONSUMER_COMPLAINTS;

SELECT DISTINCT(EXTRACT(YEAR FROM (TO_DATE(DATE_RECEIVED,'dd-MM-YYYY')))) FROM MKS_CONSUMER_COMPLAINTS;

SELECT DISTINCT(EXTRACT(MONTH FROM (TO_DATE(DATE_RECEIVED,'dd-MM-YYYY')))) FROM MKS_CONSUMER_COMPLAINTS;

SELECT * ,
    CASE
        WHEN(TO_DATE(DATE_RECEIVED,'DD-MM-YYYY'))>='2013-01-01' AND (TO_DATE(DATE_RECEIVED,'DD-MM-YYYY'))<='2013-12-01' THEN 'PPR12 PERIOD'
        WHEN(TO_DATE(DATE_RECEIVED,'DD-MM-YYYY'))>='2014-01-01' AND (TO_DATE(DATE_RECEIVED,'DD-MM-YYYY'))<='2014-12-01' THEN 'PPR12 PERIOD'
        WHEN(TO_DATE(DATE_RECEIVED,'DD-MM-YYYY'))>='2015-01-01' AND (TO_DATE(DATE_RECEIVED,'DD-MM-YYYY'))<='2015-12-01' THEN 'PPR12 PERIOD'
        ELSE 'INVALID_RANGE'
        END AS TXN_PERIOD
        FROM MKS_CONSUMER_COMPLAINTS;
        
create or replace table consumer_complaints_aws like MKS_CONSUMER_COMPLAINTS;

show columns in consumer_complaints_aws;

create or replace table consumer_complaints_azure like MKS_CONSUMER_COMPLAINTS;

show columns in consumer_complaints_azure;



SELECT * FROM CONSUM_COMPLAINTS;

CREATE OR REPLACE TABLE CONSUM_COMPLAINTS_COPY AS
SELECT * FROM CONSUM_COMPLAINTS;

CREATE OR REPLACE TABLE consumer_complaints_aws LIKE CONSUM_COMPLAINTS;
SHOW COLUMNS IN consumer_complaints_aws;

##### LAODING A FILE FROM EXTERNAL STAGE - AWS ##########

CREATE OR REPLACE TABLE consumer_complaints_aws LIKE CONSUM_COMPLAINTS;
SHOW COLUMNS IN consumer_complaints_aws;

--list stage confirm if its empty
LIST @AWS_S3_STORAGE_SERVICE;

----list stage confirm if its empty
LIST @AZURE_STORAGE;

##### LOADING A FILE FROM EXTERNAL STAGE - AZURE ##########
CREATE OR REPLACE TABLE consumer_complaints_azure LIKE CONSUM_COMPLAINTS;
SHOW COLUMNS IN consumer_complaints_azure;

--COPYING INTO AZURE STORAGE SERVICE
COPY INTO consumer_complaints_azure FROM @CONSUMERCOMP
FILE_FORMAT = (TYPE = CSV FIELD_DELIMITER = ',' SKIP_HEADER = 1)
PURGE = TRUE;

--BINGO
SELECT * FROM consumer_complaints_azure;

--REMOVE FILES
REMOVE @AWS_S3_STORAGE_SERVICE;


--
##COPYING INTO STORAGE SERVICE
COPY INTO "AJ_DEMODATABASE"."PUBLIC"."CONSUMER_COMPLAINTS_AWS" FROM @AWS_S3_STORAGE_SERVICE
FILE_FORMAT = (TYPE = CSV FIELD_DELIMITER = ',' SKIP_HEADER = 1)
PURGE = TRUE;

--BINGO DONE....
SELECT * FROM consumer_complaints_aws;





